{"version":3,"sources":["Components/Monster.tsx","Components/MonsterContainer.tsx","App.tsx","index.tsx"],"names":["Monster","monster","className","src","url","alt","name","description","MonsterContainer","monsters","map","singleMonster","id","monstersArray","uuidv4","fetch","then","response","json","users","console","log","App","useState","setMonsters","monsterSearch","setMonsterSearch","type","onChange","event","prev","filter","toString","toLowerCase","trim","includes","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QA4BeA,EAjBmB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAChC,OAEI,qBAAKC,UAAU,wCAAf,SACI,sBAAKA,UAAU,0GAAf,UACI,qBAAKC,IAAKF,EAAQG,IAAKC,IAAG,YAC1B,qBAAKH,UAAU,iDAAf,SACI,gCACI,mBAAGA,UAAU,gFAAb,SAA8FD,EAAQK,OACtG,mBAAGJ,UAAU,uEAAb,SAAqFD,EAAQM,yBCOtGC,EAf4B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAQzC,OACI,qBAAKP,UAAS,mBAAd,SANOO,EAASC,KAAI,SAACC,GACjB,OAAO,cAAC,EAAD,CAAgCV,QAASU,GAA3BA,EAAcC,UCHzCC,EAAgB,CAClB,CACID,GAAIE,eACJR,KAAM,MACNC,YAAa,0BACbH,IAAK,6PAET,CACIQ,GAAIE,eACJR,KAAM,OACNC,YAAa,oBACbH,IAAK,wSAET,CACIQ,GAAIE,eACJR,KAAM,OACNC,YAAa,0BACbH,IAAK,mQAMbW,MAAM,8CAA8CC,MAAK,SAAAC,GAAaA,EAASC,OAAOF,MAAK,SAAAG,GAAK,OAAIC,QAAQC,IAAIF,SAEhH,IAyBeG,EAzBH,WAAO,IAAD,EACkBC,mBAA6B,IAD/C,mBACPd,EADO,KACGe,EADH,OAE4BD,mBAAiB,IAF7C,mBAEPE,EAFO,KAEQC,EAFR,KAcd,OACI,gCACI,uBAAOxB,UAAS,2BAA8ByB,KAAK,OAAOC,SAZrC,SAACC,GAC1BL,GAAY,SAACM,GACT,OACIjB,EAAckB,QAAO,SAAC/B,GAAD,OAAaA,EAAQM,KAAK0B,WAAWC,cAAcC,OAAOC,SAASN,EAAMO,OAAOC,MAAML,WAAWC,cAAcC,cAG5IR,EAAiBG,EAAMO,OAAOC,QAOnBA,MAAOZ,IAEbA,EAAcO,WAAWE,OAAOF,WAAa,cAAC,EAAD,CAAkBvB,SAAUA,IACtE,cAAC,EAAD,CAAkBA,SAAUI,QCpD5CyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a98b2235.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface IProps {\r\n    monster: {\r\n        id: string\r\n        name: string\r\n        description?: string\r\n        url: string,\r\n    }\r\n}\r\n\r\nconst Monster: React.FC<IProps> = ({monster}) => {\r\n    return (\r\n\r\n        <div className=\"flex justify-center py-8 sm:px-6 px-4\">\r\n            <div className=\"max-w-sm w-full relative rounded shadow bg-white dark:bg-gray-800 grid place-content-center text-center\">\r\n                <img src={monster.url} alt={`monster`}/>\r\n                <div className=\"py-6 px-6 flex md:items-center justify-between\">\r\n                    <div>\r\n                        <p className=\"sm:text-lg text-base font-semibold leading-5 text-gray-800 dark:text-gray-100\">{monster.name}</p>\r\n                        <p className=\"sm:text-base text-sm leading-4 pt-3 text-gray-500 dark:text-gray-400\">{monster.description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Monster;\r\n","import React from 'react';\r\nimport Monster from \"./Monster\";\r\n\r\ninterface IProps {\r\n    monsters: {\r\n        id: string\r\n        name: string\r\n        description?: string\r\n        url: string\r\n    }[]\r\n}\r\n\r\nconst MonsterContainer: React.FC<IProps> = ({monsters}) => {\r\n\r\n    const renderMonsterList = (): JSX.Element[] => {\r\n        return monsters.map((singleMonster) => {\r\n            return <Monster key={singleMonster.id} monster={singleMonster}/>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={`grid grid-cols-4`}>\r\n            {renderMonsterList()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonsterContainer;\r\n","import React, {useState} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport MonsterContainer from \"./Components/MonsterContainer\";\r\n\r\ninterface IState {\r\n    monsters: {\r\n        id: string\r\n        name: string\r\n        description?: string\r\n        url: string,\r\n    }[]\r\n}\r\n\r\nconst monstersArray = [\r\n    {\r\n        id: uuidv4(),\r\n        name: 'Bob',\r\n        description: 'This is a good bald man',\r\n        url: 'https://avataaars.io/?avatarStyle=Circle&topType=NoHair&accessoriesType=Round&facialHairType=BeardLight&facialHairColor=Brown&clotheType=CollarSweater&clotheColor=Blue03&eyeType=Dizzy&eyebrowType=SadConcernedNatural&mouthType=Twinkle&skinColor=Brown'\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        name: 'Jake',\r\n        description: 'This is a Hat Man',\r\n        url: 'https://avataaars.io/?avatarStyle=Circle&topType=Hat&accessoriesType=Wayfarers&hairColor=Auburn&facialHairType=BeardMajestic&facialHairColor=Platinum&clotheType=GraphicShirt&clotheColor=Gray02&graphicType=Pizza&eyeType=Side&eyebrowType=SadConcernedNatural&mouthType=Concerned&skinColor=Yellow'\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        name: 'Finn',\r\n        description: 'This is a Adventure Man',\r\n        url: 'https://avataaars.io/?avatarStyle=Circle&topType=Hat&accessoriesType=Prescription01&facialHairType=BeardMedium&facialHairColor=BrownDark&clotheType=ShirtVNeck&clotheColor=Gray01&eyeType=Dizzy&eyebrowType=RaisedExcitedNatural&mouthType=Sad&skinColor=Light'\r\n    }\r\n\r\n\r\n]\r\n\r\nfetch('https://jsonplaceholder.typicode.com/users').then(response => {response.json().then(users => console.log(users))})\r\n\r\nconst App = () => {\r\n    const [monsters, setMonsters] = useState<IState['monsters']>([]);\r\n    const [monsterSearch, setMonsterSearch] = useState<string>('');\r\n\r\n    const searchMonsterHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        setMonsters((prev) => {\r\n            return (\r\n                monstersArray.filter((Monster) => Monster.name.toString().toLowerCase().trim().includes(event.target.value.toString().toLowerCase().trim()))\r\n            )\r\n        })\r\n        setMonsterSearch(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input className={`border-2 border-gray-400`} type=\"text\" onChange={searchMonsterHandler}\r\n                   value={monsterSearch}/>\r\n\r\n            {monsterSearch.toString().trim().toString() ? <MonsterContainer monsters={monsters}/> :\r\n                <MonsterContainer monsters={monstersArray}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}